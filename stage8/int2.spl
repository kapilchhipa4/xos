
alias physicalSP S0;
physicalSP = ([ PTBR + (2 * SP/512) ] * 512) +( SP % 512 );
alias i S1;
alias file S2;
file = [physicalSP-3];
alias found S3;
alias syscallNo S4;
syscallNo =[physicalSP - 1];
// storing all data in variables or registers
				if(syscallNo == 2) then 
				found = 0;
				i =0; // will store index of fat which has that file entry
				while (i < 64) do 	// check file in fat table;
					if ( [FAT + 8 * i +2] != -1) then
						if ( [FAT + 8 * i + 0] == file) then	
							found = 1;
							break;
						endif;
					endif;
					i=i+1;
				endwhile;

				if(found == 0) then	// if not found then return -1;
					[physicalSP - 2]=-1;
					ireturn ;
				endif; //j now u can use found as starting value 1;
				alias fatIndex S5;
				fatIndex = i;
				i = 0;
				found=0;
				while ( i < 64 ) do // searching in system wide open file table
					if( [1344 + i ]	== fatIndex ) then // 1344 is base address of SWOFT
						found = 1;
						break;
					endif;
					i = i + 2;
				endwhile;
				alias SWOFTentry S6;
				if (found == 1) then
					SWOFTentry = i;
				else
					i =0 ;
					while( i < 64) do
						if( [1344 + i] == -1 ) then 
							break;
						endif;
					i = i + 2;
					endwhile;
					if ( i >= 64) then
						[physicalSP - 2] =-1;
						ireturn;
					else 
						SWOFTentry =i;
					endif;
					
				endif;
				found = 0 ;  // again do found=0
				alias cpid S7;
				cpid = (PTBR - 1024) /8;
				i = 15;
				while ( i< 31 ) do
					if( [ READY_LIST + cpid * 32 + i ]  == -1 ) then
						found=1;
						break;
					endif;
					i = i + 2;
				endwhile; 
				if(found == 0) then
					[physicalSP - 2] =-1;
					ireturn;
				endif;
				found = 0;
				[ READY_LIST + (cpid * 32)  + i] = SWOFTentry;
				[ READY_LIST + (cpid * 32)  + i + 1] = 0;
				[ 1344 + SWOFTentry ] = fatIndex;
				[ 1344 + SWOFTentry + 1] = [ 1344 + SWOFTentry + 1] + 1;
				alias physicalindex S8;
				physicalindex = 15;
				alias des S9;
				des = 0;
				while(physicalindex < i) do
				des = des + 1;
				physicalindex = physicalindex + 2;
				endwhile;
				[ physicalSP - 2 ] = des;
				ireturn;
				endif;
if(syscallNo == 3) then

if(file<0 || file>7) then
[physicalSP - 2] = -1;
ireturn;
endif;// file descriptor is valid or not



alias cpid S5;
alias index S6;
file = 15 + file * 2;
cpid = (PTBR - 1024) /8;
index = [READY_LIST + (cpid * 32) + file];
//check whether file open or not
	if(index == -1) then
	[physicalSP - 2] = -1;
	ireturn;
	endif;

[1344 + (index * 2) + 1 ] = [1344 + (index * 2) + 1 ] - 1;
if( [1344 + (index * 2) + 1 ] == 0) then
	[1344 + (index * 2)  ] = -1;
endif;
[READY_LIST + (cpid * 32) + file] = -1;
[physicalSP - 2] = 0;
ireturn;
	
endif;
